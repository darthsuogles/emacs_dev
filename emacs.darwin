#!/bin/bash

# We cannot set `pipefail` it won't launch the server
set -eu -o pipefail

# This version works with the homebrew build of emacs
emacs_root="/Applications"
emacs_server_pattern="Emacs.app/Contents/MacOS/Emacs"
emacs_server="${emacs_root}/${emacs_server_pattern}"
emacs_client="/usr/local/bin/emacsclient"

[[ -e "${emacs_server}" ]] && [[ -e "${emacs_client}" ]]

function must_use_emacs_server {
    for arg in ${@}; do
        if [[ "$arg" == "-batch" ]] || [[ "$arg" == "--batch" ]]; then
            echo "TRUE"; return
        fi
    done
    echo "FALSE"
}

if [[ $# -gt 1 ]]; then
    if [[ "TRUE" == "$(must_use_emacs_server $@)" ]]; then
	echo "Emacs compiler mode with: $@"
	exec "${emacs_server}" "$@"
	exit 0
    fi
fi

ps aux | grep -v grep | grep -Ei "${emacs_server_pattern}" || {
    echo "Initializing emacs server"
    "${emacs_server}" --daemon
}
# which osascript > /dev/null 2>&1 && \
    #     osascript -e 'tell application "Emacs" to activate'
# Get the number of all frames
num_frames="$(${emacs_client} -e '(length (frame-list))')"
if [[ ${num_frames} -lt 2 ]]; then
    # Create a new frame if we only have the minimized server frame
    args=-nc
else
    # Just launch on the existing frame window
    args=-n
fi
exec "${emacs_client}" "${args}" --quiet --no-wait "$@" &
